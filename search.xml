<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[GitHub + Hexo + NexT 个人博客配置]]></title>
    <url>%2Fposts%2F7070%2F</url>
    <content type="text"><![CDATA[本文主要记录了本站所进行的配置博主使用的是 NexT 主题，可以选择自己喜欢的 主题，其他主题的配置应该类似，但本文配置不保证其他主题适用; 文中：站点配置文件 是根目录下的 _config.yml 文件。每次修改 站点配置文件，需重启才能生效主题配置文件 是主题目录下的 _config.yml 文件 安装 NexT 主题下载 NexT 主题NexT 主题源码 打开文件夹：your_dir/themes，在文件夹内右键，点击 Git Bash Here，调出 Git 命令行；运行： $ git clone https://github.com/iissnan/hexo-theme-next.git 启用 NexT 主题将下载的文件夹重命名为 NexT，修改 站点配置文件 的 theme 默认值 landscape 为 NexT 1234# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: NexT 重启服务器 $ hexo s ，在浏览器地址栏输入 localhost:4000 就可看到 NexT 主题应用成功 配置 NexT 主题主题外观 NexT 目前提供了三种外观，可通过修改 主题配置文件 选择你喜欢的板式 1234# Schemes# scheme: Muse# scheme: Mistscheme: Pisces 首页只显示摘要修改 主题配置文件 12345# Automatically Excerpt. Not recommend.# Please use &lt;!-- more --&gt; in the post to control excerpt accurately.auto_excerpt: enable: true length: 150 语言NexT 主题导航栏等默认是英文，要修改为你使用的语言在 your_dir/themes/NexT/languages 文件夹下，找到对应的语言文件修改 站点配置文件，language 值为对应语言文件夹名 1language: zh-Hans 标签 tags | 分类 categories首先新建 tags | categories 页面 $ hexo new page tags$ hexo new page categories 然后打开 tags | categories 文件夹下的 index 文件，添加： type: tags | type: categories tags 12345---title: tagsdate: 2017-06-26 18:16:09type: tags--- categories 12345---title: categoriesdate: 2017-06-26 18:35:08type: categories--- 修改 主题配置文件，添加 tags 和 archives 到 menu 下 1234menu: home: / archives: /archives tags: /tags 可通过修改 menu_icons 下的内容修改图标，NexT 使用的是 Font Awesome 图标库 在任意文章下添加 tags | categories 1234567---title: Hello Worldcategories: - categories testtags: - tags test--- 代码块样式代码块有 normal | night | night eighties | night blue | night bright 五种样式可通过修改 主题配置文件 进行选择 12345# Code Highlight theme# Available value:# normal | night | night eighties | night blue | night bright# https://github.com/chriskempson/tomorrow-themehighlight_theme: normal 背景动画在 主题配置文件 选择你喜欢的动画，把对应的值改为 true 即可应用 123456789101112131415# Canvas-nestcanvas_nest: true# three_wavesthree_waves: false# canvas_linescanvas_lines: false# canvas_spherecanvas_sphere: false# Only fit scheme Pisces# Canvas-ribboncanvas_ribbon: false 设置 RSS在根目录下安装 hexo-generator-feed 插件 $ npm install hexo-generator-searchdb --save 主题配置文件 下 RSS 字段的值(不懂) 123false：禁用 RSS，不在页面上显示 RSS 连接。留空：使用 Hexo 生成的 Feed 链接。 你可以需要先安装 hexo-generator-feed 插件。具体的链接地址：适用于已经烧制过 Feed 的情形。 第三方服务评论系统NexT 支持多款评论系统 DISQUS 正常情况下国内不能访问，“多说”已经关闭，网易云跟帖 也即将关闭；畅言 也不错，NexT 也已集成；博主用的 友言 各评论系统集成步骤基本类似： 注册账号 进入到后台管理，填写站点信息 获取代码（仅需要代码中的 ID 或 Key，不需要把代码添加到你博客中） 修改 主题配置文件 用什么评论系统修改 主题配置文件 中对应代码 Disqus填写站点信息时，Website Name 项填写 Disqus 唯一标示名 shortname（貌似要和 GitHub 名对应） 12345# Disqusdisqus: enable: false shortname: count: true 网易云跟帖 （将于 2017 年 8 月 1 日停止服务）填写站点信息时，站点网址不能填写 GitHub 域名，要填写你购买的域名网易云跟帖本地测试需要做些配置。具体可查看 网易云跟帖本地测试博主没有在本地测试 12# Gentie productKeygentie_productKey: 畅言 12345# changyanchangyan: enable: false appid: appkey: 友言 123# Support for youyan comments system.# You can get your uid from http://www.uyan.cc# youyan_uid: your uid 数据统计博主用的 不蒜子统计，NexT 主题的话，只需修改 主题配置文件 12busuanzi_count: enable: true 本地查看时可能统计出来的数比较大，部署到线上没毛病就好 站内搜索博主用的 Local Search 搜索 安装 hexo-generator-searchdb 插件,在根目录执行以下命令: $ npm install hexo-generator-searchdb --save 编辑 站点配置文件，新增以下内容 12345search: path: search.xml field: post format: html limit: 10000 编辑 主题配置文件，启用本地搜索功能： 123# Local searchlocal_search: enable: true 重启服务器 $ hexo s 博客优化文章链接唯一化Hexo 官网文档，提供了几种 永久链接 方案，如果不更改文章题目，可以使用官方给出的方案； 但也许你会数次更改文章题目或者变更文章发布时间，在默认设置下，文章链接都会改变，不利于搜索引擎收录，也不利于分享。 首先安装 hexo-abbrlink 插件，在根目录执行以下命令 $ npm install hexo-abbrlink --save 然后在 站点配置文件 中修改 permalink 值 1permalink: posts/:abbrlink/ # “posts/” 可自行更换 在 站点配置文件 中添加如下代码 1234# abbrlink configabbrlink: alg: crc32 # 算法：crc16(default) and crc32 rep: hex # 进制：dec(default) and hex 可参照样例进行选择： 1234567891011crc16 &amp; hexhttps://post.zz173.com/posts/66c8.htmlcrc16 &amp; dechttps://post.zz173.com/posts/65535.htmlcrc32 &amp; hexhttps://post.zz173.com/posts/8ddf18fb.htmlcrc32 &amp; dechttps://post.zz173.com/posts/1690090958.html crc16的最大帖子数是 65535，对于个人博客应该够用了。。。吧； 重启服务器 $ hexo s 搜索引擎收录搜索引擎收录及优化，可查看 Hexo Seo优化让你的博客在google搜索排名第一，或其他文末参考博客。 谷歌、百度验证文件，放在 your_dir/themes/NexT/source 文件夹下，部署时不会被编译 Another 命令行最好使用 Node.js 或 Git 命令行，不要使用 Windows 自带的 cmd；以 git 开头的命令必须使用 Git 命令行 –&gt; Git Bash Here 每次修改 站点配置文件 后，需重启服务器 hexo s 才能生效 博客正文使用 Markdown 语法书写； 图床推荐使用 七牛云存储，有 10G 免费空间； 更多主题配置推荐查看 NexT 官方文档，官网写的很详细。 更多个性化的配置可参考 基于Hexo搭建个人博客——进阶篇(从入门到入土) 参考文献 基于Hexo搭建个人博客——进阶篇(从入门到入土) Hexo-Next的背景动态效果和心心 使用 Hexo 搭建博客的深度优化与定制 hexo-abbrlink介绍 Hexo Seo优化让你的博客在google搜索排名第一 让更多人看到你的博客 github+hexo提交到百度谷歌搜索引擎 Hexo常见问题解决方案 Hexo 官网 NexT 官网]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GitHub + Hexo 搭建个人博客]]></title>
    <url>%2Fposts%2F42385%2F</url>
    <content type="text"><![CDATA[搭建环境 安装 Git下载 Git，并安装 安装 NodeJS下载 Node.js，并安装 安装 Hexo全局安装 hexo $ npm install -g hexo 搭建本地博客 初始化 Hexo 文件夹在任意文件夹下（如 E:\Hexo），右键，点击 Git Bash Here ，调出 Git 命令行，运行 $ hexo init 安装依赖包$ npm install 本地查看 生成静态文件（public文件夹）$ hexo generate 运行服务器$ hexo server 在浏览器输入 localhost:4000 即可查看本地博客效果 部署到 GitHub 注册 GitHub 账号GitHub 官网：https://github.com/ 创建页面仓库仓库名要和账号对应格式：yourname.github.io SSH 公钥配置如果是第一次使用此 GitHub 账号，需要配置公钥配置步骤查看文末参考博客 配置站点文件（全局 _config.yml）根目录下的全局 _config.yml 文件 123456# Deployment # 部署## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repository: https://github.com/hoxun/hoxun.github.io.git branch: master 注意： 冒号 “:” 后面有一个空格 type 值自 3.0 版本后为 git，之前为 github repository: 刚刚创建的 github 仓库地址（repo == repository） Error: Error: remote: Permission to hoxun/hoxun.github.io.git denied to ... 原因：一台电脑多个 GitHub 账号 解决：把仓库地址换为 SSH 形式的地址 1repository: git@github.com:Hoxun/Hoxun.github.io.git 更多 config 配置可查阅官方文档：https://hexo.io/docs/configuration.html Hexo 部署生成静态文件 $ hexo generate 部署到线上仓库(.deploy_git 文件夹) $ hexo deploy Error: ERROR Deployer not found: git 原因：缺少部署插件 解决：安装插件。执行以下命令$ npm install hexo-deployer-git --save重新 deploy 即可 以下提示说明部署成功： INFO Deploy done: git 访问 GitHub 博客页面点击 GitHub 上项目 Settings，下滑，在 GitHub Pages，提示： Your site is published at https://hoxun.github.io/ 在浏览器访问：https://hoxun.github.io/，即可打开线上博客 绑定独立域名 将独立域名与 GitHub Pages 的空间绑定在本地 source 文件夹下，新建一个名为 CNAME 的文件，里面写入要绑定的域名（比如 hoxun.me），重新部署。域名需要先去域名服务商购买 DNS设置在 DNSpod 平台或其他购买域名的平台进入到域名解析界面 CNAME 类型的记录值指向 GitHub 注册的仓库名（hoxun.github.io）A 类型的记录值指向的 IP 地址是 GitHub Pages 提供的 IP 查看 GitHub Pages 提供的 IP 的方法： 在命令行运行： $ ping hoxun.github.io GitHub Pages 提供的 IP 会改变，为保障独立域名的正常访问，要及时修改 DNS 解析的 IP 地址 Hexo 常用命令12345678910$ hexo help # 查看帮助$ hexo init # 初始化$ hexo new [post] &lt;fileName&gt; # 新建文章$ hexo new page &lt;fileName&gt; # 新建页面$ hexo new draft &lt;fileName&gt; # 新建草稿$ hexo publish &lt;fileName&gt; # 发表草稿（render_drafts: true || false # 是否显示草稿，config 中的配置）$ hexo generate # 生成网页文件，public 文件夹$ hexo server # 开启本地服务 http://localhost:4000$ hexo deploy # 部署到线上仓库（.deploy_git 文件夹）$ hexo clean # 清除缓存文件（db.json）和已生成的静态文件（public 文件夹） 简写 1234hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy Another 自行替换文章中的 hoxun 为你喜欢的名字； 命令行最好使用 Node.js 或 Git 命令行，不要使用 Windows 自带的 cmd； 博客正文使用 Markdown 语法书写； 我使用的 NexT 主题，主题相关配置可查看官网文档。或我的另一篇博客 GitHub + Hexo + NexT 个人博客配置，主要记录了我所进行的一些配置 Hexo Seo优化让你的博客在google搜索排名第一； 动动手指，NexT主题与Hexo更搭哦（基础篇）； 参考文献 手把手教你建github技术博客by hexo hexo你的博客 更换github账号后，push被旧账号阻止 Hexo 官网]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fposts%2F16107%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>Hello World</category>
      </categories>
      <tags>
        <tag>Hello World</tag>
      </tags>
  </entry>
</search>